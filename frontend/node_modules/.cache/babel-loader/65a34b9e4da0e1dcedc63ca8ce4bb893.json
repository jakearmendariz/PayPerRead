{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brendan\\\\Desktop\\\\Projects\\\\PayPerRead\\\\frontend\\\\src\\\\components\\\\FetchNames.jsx\";\nimport React from \"react\";\n/* Uses Fetch API to grab content from MongoDB */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FetchNames extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true,\n      names: null\n    };\n  }\n\n  async componentDidMount() {\n    //This function will fetch data\n    const url = \"api\"; //put link to database here\n\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      names: data.results,\n      loading: false\n    });\n    console.log(data.results); //I like to keep this here to check what kind of data I'm dealing with\n  }\n\n  render() {\n    if (this.state.loading) {\n      //check for nulls\n      return /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (!this.state.names) {\n      //check for nulls\n      return /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this);\n    }\n    /*Print data here */\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default FetchNames;","map":{"version":3,"sources":["C:/Users/Brendan/Desktop/Projects/PayPerRead/frontend/src/components/FetchNames.jsx"],"names":["React","FetchNames","Component","state","loading","names","componentDidMount","url","response","fetch","data","json","setState","results","console","log","render","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;AACA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAD6B;AAAA;;AAKd,QAAjBC,iBAAiB,GAAG;AAAI;AAC1B,UAAMC,GAAG,GAAG,KAAZ,CADsB,CACH;;AACnB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAACP,MAAAA,KAAK,EAAEK,IAAI,CAACG,OAAb;AAAsBT,MAAAA,OAAO,EAAE;AAA/B,KAAd;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACG,OAAjB,EALsB,CAKK;AAC9B;;AACDG,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKb,KAAL,CAAWC,OAAd,EAAwB;AAAI;AACxB,0BAAO;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,QAAG,CAAC,KAAKD,KAAL,CAAWE,KAAf,EAAqB;AAAE;AACnB,0BAAO;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AAED;;;AACA,wBAAO;AAAK,MAAA,KAAK,EAAE;AAACY,QAAAA,UAAU,EAAE;AAAb,OAAZ;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA,cADG,eAEF;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFE;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAMH;;AA5BoC;;AA+BzC,eAAehB,UAAf","sourcesContent":["import React from \"react\";\r\n\r\n/* Uses Fetch API to grab content from MongoDB */\r\nclass FetchNames extends React.Component {\r\n    state = {\r\n        loading: true,\r\n        names: null,\r\n    }\r\n    async componentDidMount() {   //This function will fetch data\r\n        const url = \"api\"; //put link to database here\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        this.setState({names: data.results, loading: false})\r\n        console.log(data.results); //I like to keep this here to check what kind of data I'm dealing with\r\n    }\r\n    render() {\r\n        if(this.state.loading ) {   //check for nulls\r\n            return <br />;\r\n        }\r\n\r\n        if(!this.state.names){ //check for nulls\r\n            return <br />;\r\n        }\r\n\r\n        /*Print data here */\r\n        return <div style={{fontWeight: \"bold\"}}>\r\n            <br />\r\n             <div>\r\n                 <p>Welcome</p>\r\n            </div> \r\n        </div>\r\n    }\r\n}\r\n\r\nexport default FetchNames"]},"metadata":{},"sourceType":"module"}